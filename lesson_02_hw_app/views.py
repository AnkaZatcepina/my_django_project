"""
–°–æ–∑–¥–∞–π—Ç–µ —Ç—Ä–∏ –º–æ–¥–µ–ª–∏ Django: –∫–ª–∏–µ–Ω—Ç, —Ç–æ–≤–∞—Ä –∏ –∑–∞–∫–∞–∑.

–ö–ª–∏–µ–Ω—Ç –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤. –ó–∞–∫–∞–∑ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤. –¢–æ–≤–∞—Ä –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–∫–∞–∑–æ–≤.

–ü–æ–ª—è –º–æ–¥–µ–ª–∏ ¬´–ö–ª–∏–µ–Ω—Ç¬ª:
    ‚Äî –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞
    ‚Äî —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞
    ‚Äî –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
    ‚Äî –∞–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞
    ‚Äî –¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞

–ü–æ–ª—è –º–æ–¥–µ–ª–∏ ¬´–¢–æ–≤–∞—Ä¬ª:
    ‚Äî –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    ‚Äî —Ü–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞
    ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞
    ‚Äî –¥–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞

–ü–æ–ª—è –º–æ–¥–µ–ª–∏ ¬´–ó–∞–∫–∞–∑¬ª:
    ‚Äî —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é ¬´–ö–ª–∏–µ–Ω—Ç¬ª, —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞, —Å–¥–µ–ª–∞–≤—à–µ–≥–æ –∑–∞–∫–∞–∑
    ‚Äî —Å–≤—è–∑—å —Å –º–æ–¥–µ–ª—å—é ¬´–¢–æ–≤–∞—Ä¬ª, —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –≤—Ö–æ–¥—è—â–∏–µ –≤ –∑–∞–∫–∞–∑
    ‚Äî –æ–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞
    ‚Äî –¥–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞

–î–æ–ø–∏—à–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–π CRUD –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–¥–µ–ª—è–º–∏ –ø–æ –∂–µ–ª–∞–Ω–∏—é. 


üìå –ò–∑–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É —Å –≤—ã–≤–æ–¥–æ–º –¥–≤—É—Ö html —Å—Ç—Ä–∞–Ω–∏—Ü:
–≥–ª–∞–≤–Ω–æ–π –∏ –æ —Å–µ–±–µ.
üìå –ü–µ—Ä–µ–Ω–µ—Å–∏—Ç–µ –≤—ë—Ä—Å—Ç–∫—É –≤ —à–∞–±–ª–æ–Ω—ã.
üìå –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤
—à–∞–±–ª–æ–Ω —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç.
üìå –í—ã–¥–µ–ª–∏—Ç–µ –æ–±—â–∏–π –∫–æ–¥ —à–∞–±–ª–æ–Ω–æ–≤ –∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π
—à–∞–±–ª–æ–Ω base.html.


üìå –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö
–∫–ª–∏–µ–Ω—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –≤—Å–µ—Ö –µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ
–≤—Ä–µ–º–µ–Ω–∏:
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π (–Ω–µ–¥–µ–ª—é)
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π (–º–µ—Å—è—Ü)
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 365 –¥–Ω–µ–π (–≥–æ–¥)
üìå *–¢–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–∫–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è.
"""
from django.shortcuts import render
from django.http import HttpResponse 
from django.views import View
from . import models
from . import forms
import decimal
from datetime import datetime, timedelta
from django.template.response import TemplateResponse
from django.core.files.storage import FileSystemStorage

class MainView(View):
    def get(self, request):
        return render(request, "lesson_02_hw_app/index.html")

def about(request):
    return render(request, "lesson_02_hw_app/about.html")

def get_clients(request):
    clients = models.Client.objects.all()
    return HttpResponse(clients)

def get_products(request):
    products = models.Product.objects.all()
    return HttpResponse(products)

#lesson2/orders_by_client?client_id=3
#lesson2/orders_by_client/3
def get_orders_by_client(request, client_id: int):
    #client_id = request.GET.get('client_id')
    client = models.Client.objects.filter(pk=client_id)
    orders = models.Order.objects.filter(client__pk=client_id)
    context = {
        'client': client,
        'orders': orders
    }
    return render(request, "lesson_02_hw_app/orders_by_client.html", context) 
      

def create_order(request):
    client_id = request.GET.get('client_id')
    order = models.Order(client_id=client_id)
    order.save()
    return HttpResponse(order) 

#lesson2/add_product_to_order/?order_id=16&product_id=5
def add_product_to_order(request):
    order_id = request.GET.get('order_id')
    product_id = request.GET.get('product_id')
    order = models.Order.objects.filter(pk=order_id).first()
    product = models.Product.objects.filter(pk=product_id).first()  
    order_product = models.OrderProduct(order=order,
                                        product=product,
                                        quantity=1,
    )   
    order.products.add(product)
    order.save()
    return HttpResponse(order)        

def update_product_price(request, product_id: int, price: int):
    product = models.Product.objects.filter(pk=product_id).first()
    if product:
        product.price = price
        product.save()
        return HttpResponse('–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∞')
    else:
        return HttpResponse('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')

def delete_order(request, order_id: int):
    order = models.Order.objects.filter(pk=order_id).first()
    if order:
        order.delete()
        return HttpResponse('–ó–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω')
    else:
        return HttpResponse('–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω')    

def filter_orders_min_date(request, client_id: int, min_date: datetime.date):
    client = models.Client.objects.filter(id=client_id).first()
    products = models.Product.objects.filter(orderproduct__order__client=client).distinct()
    if min_date == None:
        #orders = models.Order.objects.filter(client__pk=client_id).order_by('-order_date')
        pass 
    else:
        #orders = models.Order.objects.filter(client__pk=client_id,
        #                                   order_date__gte=min_date).order_by('-order_date') 
        products.filter(orderproduct__order__creating_date__gte=min_date)
            
    context = {
        'client': client,
        #'orders': orders,
        'products': products
    }
    #return render(request, "lesson_02_hw_app/products_by_client.html", context)  
    return render(request, "lesson_02_hw_app/products_by_client_new.html", context)                                        

def get_products_by_client(request, client_id: int):
    return filter_orders_min_date(request, client_id, None)      

def get_products_by_client_week(request, client_id: int):
    min_date = datetime.today() - timedelta(days=7)
    return filter_orders_min_date(request, client_id, min_date) 

def get_products_by_client_month(request, client_id: int):
    min_date = datetime.today() - timedelta(days=30)
    return filter_orders_min_date(request, client_id, min_date)      
    
def get_products_by_client_year(request, client_id: int):
    min_date = datetime.today() - timedelta(days=365)
    return filter_orders_min_date(request, client_id, min_date)    

def update_product(request, product_id: int):
    product = models.Product.objects.filter(pk=product_id).first()
    if product:
        if request.method == 'POST':
            form = forms.ProductForm(request.POST, request.FILES)
            if form.is_valid():
                product.name = form.cleaned_data['name']
                product.description = form.cleaned_data['description']
                product.price = form.cleaned_data['price']
                product.quantity = form.cleaned_data['quantity']
                image = form.cleaned_data['image']
                #print('QQQQQQQQQQQQQ')
                #print(image)
                #fs = FileSystemStorage()
                #fs.save(image.name, image)
                product.image = image
                product.save()
        else:
            form = forms.ProductForm(initial={
                'name': product.name,
                'description': product.description,
                'price': product.price,
                'quantity': product.quantity,
                'image': product.image,
            }) 
            #form = forms.ProductForm()
        return TemplateResponse(request, 'lesson_02_hw_app/update_product.html', context={'product': product, 'form': form})
        
    else:
        return HttpResponse('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω')